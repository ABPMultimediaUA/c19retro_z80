ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 1.
Hexadecimal [16-Bits]



                              1 .include "../man/entity_manager.h.s"
                              1 ;;
                              2 ;;  ENTITY MANAGER HEADER
                              3 ;;
                              4 
                              5 .globl  entityman_init
                              6 .globl  get_entity_array
                              7 .globl  entityman_set_dead
                              8 .globl  entityman_update
                              9 
                             10 .macro DefineStar _type,_x,_y,_vx,_vy,_color,_last_ptr
                             11     .db _type
                             12     .db _x
                             13     .db _y
                             14     .db _vx
                             15     .db _vy
                             16     .db _color    
                             17     .dw _last_ptr
                             18 .endm
                             19 
                     0000    20 e_type = 0
                     0001    21 e_x = 1
                     0002    22 e_y = 2
                     0003    23 e_vx = 3
                     0004    24 e_vy = 4
                     0005    25 e_color = 5
                     0006    26 e_last_ptr_1 = 6
                     0007    27 e_last_ptr_2 = 7
                     0008    28 sizeof_e = 8
                     000A    29 max_entities = 10
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 2.
Hexadecimal [16-Bits]



                              2 .include "../cpct_functions.h.s"
                              1 
                              2 .globl  cpct_disableFirmware_asm
                              3 .globl  cpct_setVideoMode_asm
                              4 .globl  cpct_getScreenPtr_asm
                              5 .globl  cpct_waitVSYNC_asm
                              6 .globl  cpct_setPALColour_asm
                              7 .globl  HW_BLACK
                              8 .globl  HW_WHITE
                     C000     9 CPCT_VMEM_START_ASM = 0xC000
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 3.
Hexadecimal [16-Bits]



                              3 .include "render_system.h.s"
                              1 .globl  rendersys_init
                              2 .globl  rendersys_update
                              3 .globl  rendersys_delete_entity
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 4.
Hexadecimal [16-Bits]



                              4 
                              5 ;pallete: 
                              6 ;  .db   HW_BLACK
                              7 ;  .db   HW_BLACK
                              8 ;  .db   HW_BLACK
                              9 ;  .db   HW_BLACK
                             10 ;  .db   HW_WHITE
                             11 ;  .db   HW_WHITE
                             12 ;  .db   HW_WHITE
                             13 ;  .db   HW_WHITE
                             14 ;  .db   HW_BLUE
                             15 ;  .db   HW_BLUE
                             16 ;  .db   HW_BLUE
                             17 ;  .db   HW_BLUE
                             18 ;  .db   HW_RED
                             19 ;  .db   HW_RED
                             20 ;  .db   HW_RED
                             21 ;  .db   HW_RED
                             22 
   0000                      23 rendersys_init::  
   0000 0E 00         [ 7]   24   ld    c, #0
   0002 CD 00 00      [17]   25   call  cpct_setVideoMode_asm    
                             26 
   0005 2E 00         [ 7]   27   ld    l, #0
   0007 26 00         [ 7]   28   ld    h, #HW_BLACK
   0009 CD 00 00      [17]   29   call  cpct_setPALColour_asm
                             30 
                             31 ;  call get_entity_array
                             32 ;rendersys_init_loop:  
                             33 ;  push af
                             34 ;  ;; Calculate a video-memory location for printing a string
                             35 ;  ld   de, #CPCT_VMEM_START_ASM ;; DE = Pointer to start of the screen
                             36 ;  ld    c, e_x(ix)                  ;; C = x coordinate       
                             37 ;  ld    b, e_y(ix)                  ;; B = y coordinate   
                             38 ;  call  cpct_getScreenPtr_asm    ;; Calculate video memory location and return it in HL
                             39 ;
                             40 ;  ld  e_last_ptr_1(ix), l
                             41 ;  ld  e_last_ptr_2(ix), h
                             42 ;  ld    c, e_color(ix)
                             43 ;  ld   (hl), c
                             44 ;  ld   bc, #sizeof_e
                             45 ;  add  ix, bc
                             46 ;  
                             47 ;  pop   af
                             48 ;  dec   a
                             49 ;  ret   z
                             50 ;  jr rendersys_init_loop
   000C C9            [10]   51   ret
                             52 
   000D                      53 rendersys_update::
   000D CD 00 00      [17]   54   call get_entity_array
   0010 B7            [ 4]   55   or     a
   0011 C8            [11]   56   ret    z
   0012                      57 rendersys_loop:
   0012 F5            [11]   58   push af
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 5.
Hexadecimal [16-Bits]



                             59 
   0013 DD 6E 06      [19]   60   ld    l, e_last_ptr_1(ix)          
   0016 DD 66 07      [19]   61   ld    h, e_last_ptr_2(ix)          
   0019 0E 00         [ 7]   62   ld    c, #00
   001B 71            [ 7]   63   ld   (hl), c
                             64 
                             65   ;; Calculate a video-memory location for printing a string
   001C 11 00 C0      [10]   66   ld   de, #CPCT_VMEM_START_ASM ;; DE = Pointer to start of the screen
   001F DD 4E 01      [19]   67   ld    c, e_x(ix)                  ;; C = x coordinate       
   0022 DD 46 02      [19]   68   ld    b, e_y(ix)                  ;; B = y coordinate   
   0025 CD 00 00      [17]   69   call  cpct_getScreenPtr_asm    ;; Calculate video memory location and return it in HL
                             70 
   0028 DD 75 06      [19]   71   ld  e_last_ptr_1(ix), l
   002B DD 74 07      [19]   72   ld  e_last_ptr_2(ix), h
   002E DD 4E 05      [19]   73   ld    c, e_color(ix)
   0031 71            [ 7]   74   ld   (hl), c
   0032 01 08 00      [10]   75   ld   bc, #sizeof_e
   0035 DD 09         [15]   76   add  ix, bc
                             77 
   0037 F1            [10]   78   pop   af
   0038 3D            [ 4]   79   dec   a
   0039 C8            [11]   80   ret   z
   003A 18 D6         [12]   81   jr rendersys_loop
                             82 
                             83 
                             84 ;;
                             85 ;;  INPUT: 
                             86 ;;    ix with memory address of entity that must be deleted
                             87 ;;  DESTROY
                             88 ;;    hl, c
                             89 ;;
   003C                      90 rendersys_delete_entity::
                             91   ;; Calculate a video-memory location for printing a string  
   003C DD 6E 06      [19]   92   ld    l, e_last_ptr_1(ix)          
   003F DD 66 07      [19]   93   ld    h, e_last_ptr_2(ix)          
   0042 0E 00         [ 7]   94   ld    c, #00
   0044 71            [ 7]   95   ld   (hl), c
   0045 C9            [10]   96   ret
